enum AppProdSecrets: Secrets {
    private static let salt: [UInt8] = [
        0xc2, 0x8e, 0x70, 0xf6, 0x7e, 0xf5, 0xae, 0x85, 
        0x6c, 0xeb, 0x7a, 0x1e, 0x18, 0xe2, 0x26, 0x0f, 
        0x3a, 0x21, 0x4d, 0x58, 0x75, 0x8f, 0x2c, 0x7d, 
        0xa6, 0x32, 0x39, 0x7f, 0x05, 0xc4, 0x8f, 0xe0, 
        0xa3, 0xf2, 0xcd, 0xce, 0x09, 0x2f, 0x12, 0xfa, 
        0xc3, 0xd8, 0x8b, 0xbd, 0xc1, 0x95, 0xc6, 0x9a, 
        0xe7, 0x0a, 0xda, 0x16, 0x63, 0x30, 0x79, 0x19, 
        0x2b, 0x30, 0x3f, 0x2c, 0x46, 0xa2, 0x09, 0x8d, 
    ]

    private static func decode(_ encoded: [UInt8], cipher: [UInt8]) -> String {
        String(
            decoding: encoded.enumerated().map { offset, element in
                element ^ cipher[offset % cipher.count]
            },
            as: UTF8.self)
    }

    static var apiKey: String {
        let encoded: [UInt8] = [
            0x85, 0xc6, 0x39, 0xbc, 0x35, 0xb9, 0xe3, 0xcb, 
            0x23, 0xda, 0x48, 0x2d, 0x2c, 0xd7, 0x10, 0x38, 
            0x62, 0x65, 0x1c, 0x19, 0x30, 0xdc, 0x6a, 0x35, 
        ]

        return decode(encoded, cipher: salt)
    }
}
